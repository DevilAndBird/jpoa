<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	">
	
	<bean id="propertyConfigurer" class="com.fh.util.PropertyConfigurer" >
	    <property name="locations">
	        <list>
	            <!-- 配置汇总 -->
<!-- 		 	    <value>classpath:overallconfig_prd.properties</value>-->
             	<value>classpath:overallconfig_dev.properties</value>
	            <!-- 推送模板 -->
	            <value>classpath:thirdconfig/jiguang/pushTemplate.properties</value>
	        </list>
	    </property>
	     <property name="fileEncoding" value="UTF-8"></property>
	 </bean>
	
	<!-- 启用注解 -->
	<context:annotation-config />
	
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.fh">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
    	<property name="dataSource" ref="dataSource"></property>
 	</bean>

   <!-- Hikari数据库连接池 tangqm start-->
   <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="shutdown">
	  <property name="driverClassName" value="${driverClassName}" />
	  <property name="jdbcUrl" value="${url}" />
	  <property name="username" value="${username}" />
	  <property name="password" value="${password}" />
       <!--  <property name="connectionTestQuery" value="SELECT 1" /> 测试数据库属性 -->
	  <!-- 生效超時 -->
	  <property name="validationTimeout" value="3000" />
	  <!-- 連接只讀數據庫時配置為true， 保證安全 -->
	  <property name="readOnly" value="false" />
	  <!-- 等待連接池分配連接的最大時長（毫秒），超過這個時長還沒可用的連接則發生SQLException， 缺省:30秒 -->
	  <property name="connectionTimeout" value="60000" />
	  <!-- 一個連接idle狀態的最大時長（毫秒），超時則被釋放（retired），缺省:10分鐘 -->
	  <property name="idleTimeout" value="60000" />
	  <!-- 一個連接的生命時長（毫秒），超時而且沒被使用則被釋放（retired），缺省:30分鐘，建議設置比數據庫超時時長少30秒，參考MySQL 
	   wait_timeout參數（show variables like '%timeout%';） -->
	  <property name="maxLifetime" value="60000" />
	  <!-- 連接池中允許的最大連接數。缺省值：10；推薦的公式：((core_count * 2) + effective_spindle_count) -->
	  <property name="maximumPoolSize" value="10" />
   </bean>
   <!-- Hikari数据库连接池 tangqm  end-->
    
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
			<tx:method name="cb*" propagation="REQUIRED" read-only="false" 
			           rollback-for="java.lang.Exception" />
<!-- 			           cb(complex business):表示复杂的业务含义，用于给service层里有复杂的业务处理的函数命名 -->
		</tx:attributes>
	</tx:advice>
	
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- 事物处理 -->
	<aop:config>
		<aop:pointcut id="pc" expression="execution(* com.fh.service..*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>
	
	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- mapper扫描 -->
        <property name="mapperLocations" value="classpath:mybatis/*/*.xml"></property>
    </bean>
    
    <bean class="com.fh.controller.config.ConfigCacheListener"></bean>
    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- ================ Shiro start ================ -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="ShiroRealm" />
		</bean>
		
		<!-- 項目自定义的Realm -->
	    <bean id="ShiroRealm" class="com.fh.interceptor.shiro.ShiroRealm" ></bean>
		
		<!-- Shiro Filter -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			
			<property name="loginUrl" value="/" />
			
			<property name="successUrl" value="/main/index" />
			
			<property name="unauthorizedUrl" value="/login_toLogin" />
			
			<property name="filterChainDefinitions">
				<value>
				
				/code/confirmSentOrders = anon <!-- 班车司机确认到达 -->
			 	
			 	/h5order/**				= anon <!-- 微信订单-->
				/weborder/**				= anon <!-- 企业下单-->
				/appdm/**				= anon <!-- 取派员确认取件-->
				/code/** 			= anon <!-- 班车司机确认到达 -->
				/apporder/** 	= anon <!-- 订单接口-->
				/appOrderBaggage/** = anon <!-- 订单QR码+图片路径 -->
				/orderToubleInfo/** = anon <!-- 订单问题件反馈-->
				/userdelivery/** 	= anon <!-- 取派员接口-->
				/code/orderCancle 						= anon <!-- 取消订单接口 -->
				/code/addInvoice						= anon <!-- 申请发票接口 -->
				/sms/smsSend							= anon <!-- 发送短信接口 -->
				/push/**	= anon <!-- 推送消息保存 -->
				
				/applogin/appUserLogin 			= anon <!-- APP用户登录 -->
				/appTransitCenter/** = anon <!-- 集散中心 -->
				/orderEvaluate/** = anon <!-- 评论 -->
				/wxpublicnum/** = anon <!-- 微信接口 -->
				
				/static/login/** 	= anon
				/static/js/myjs/** 	= authc
				/static/js/** 		= anon
	           	/code.do 			= anon
	           	/login_login	 	= anon
	           	/app**/** 			= anon
	           	/weixin/** 			= anon
	           <!-- 	/**					= authc -->
				</value>
			</property>
		</bean>
	<!-- ================ Shiro end ================ -->
	
	<import resource="ApplicationContext-redis.xml" />
    <import resource="ApplicationContext-task.xml" />
	
</beans>
