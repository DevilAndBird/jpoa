<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd ">



    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
        <property name="maxIdle" value="${Redis_maxIdle}" />
        <property name="maxWaitMillis" value="${Redis_maxWaitMillis}" />
        <property name="testOnBorrow" value="${Redis_testOnBorrow}" />
    </bean>

    <!--redis单机配置 tangqm-->
    <bean id="connectionFactory"  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
        <property name="poolConfig" ref="poolConfig" />
        <property name="port" value="${Redis_port}" />
        <property name="hostName" value="${Redis_hostName}" />
        <property name="password" value="" />
        <property name="timeout" value="${Redis_timeout}" ></property>
    </bean >
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="keySerializer" >
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
    </bean >

    <!--redis集群配置 tangqm-->
    <!--<bean id="redisClusterConfig" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="maxRedirects" value="3"></property>
        <property name="clusterNodes">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${Redis_host1}"></constructor-arg>
                    <constructor-arg name="port" value="${Redis_port1}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${Redis_host2}"></constructor-arg>
                    <constructor-arg name="port" value="${Redis_port2}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${Redis_host3}"></constructor-arg>
                    <constructor-arg name="port" value="${Redis_port3}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${Redis_host4}"></constructor-arg>
                    <constructor-arg name="port" value="${Redis_port4}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${Redis_host5}"></constructor-arg>
                    <constructor-arg name="port" value="${Redis_port5}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${Redis_host6}"></constructor-arg>
                    <constructor-arg name="port" value="${Redis_port6}"></constructor-arg>
                </bean>
            </set>
        </property>
    </bean>
    <bean id="redis4CacheConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="clusterConfig" ref="redisClusterConfig" />
        <property name="timeout" value="${Redis_timeout}" />
        <property name="poolConfig" ref="poolConfig"/>
    </bean>
    <bean name="keyStringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean name="valueStringRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redis4CacheConnectionFactory" />
        <property name="keySerializer" ref="keyStringRedisSerializer" />
        <property name="hashKeySerializer" ref="keyStringRedisSerializer" />
        <property name="valueSerializer" ref="valueStringRedisSerializer" />
        <property name="hashValueSerializer" ref="valueStringRedisSerializer" />
    </bean>-->
    <!--Spring封装了RedisTemplate对象来进行对Redis的各种操作，它支持所有的Redis原生的api。RedisTemplate位于spring-data-redis包下-->
    <!--在redisUtil工具类中导入-->
    <bean id="redisUtil" class="com.fh.util.RedisUtil" >
        <property name="redisTemplate" ref="redisTemplate" />
    </bean>

</beans>